on:
  workflow_dispatch:
    inputs:
      godot_cpp_version:
        required: false
        type: string
        default: "newest"

env:
  BASE_BRANCH: master

jobs:
  build-gdextension:
    runs-on: ${{ matrix.opts.runner }}
    name: ${{ matrix.opts.name }}
    strategy:
      fail-fast: false
      matrix:
        opts:
          - identifier: linux-debug (x86_64)
            name: Linux (x86_64) - template_debug
            runner: ubuntu-20.04
            target: template_debug
            platform: linux
            arch: x86_64
          - identifier: linux-release (x86_64)
            name: Linux (x86_64) - template_release
            runner: ubuntu-20.04
            target: template_release
            platform: linux
            arch: x86_64

          - identifier: windows-debug (x86_64)
            name: Windows (x86_64) - template_debug
            runner: windows-latest
            target: template_debug
            platform: windows
            arch: x86_64
          - identifier: windows-release (x86_64)
            name: Windows (x86_64) - template_release
            runner: windows-latest
            target: template_release
            platform: windows
            arch: x86_64

          - identifier: macos-release (universal)
            name: MacOS (universal) - template_release
            runner: macos-latest
            target: template_release
            platform: macos
            arch: universal
          - identifier: macos-debug (universal)
            name: MacOS (universal) - template_debug
            runner: macos-latest
            target: template_debug
            platform: macos
            arch: universal

    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Get Godot-CPP
        # if: ${{ inputs.godot_cpp_version == '4.1' }}
        shell: sh
        run: |
          git submodule update --init --recursive
      
      - name: (Linux) Install buildroot x86_64
        if: ${{ startsWith(matrix.opts.identifier, 'linux-') && contains(matrix.opts.arch, 'x86_64')}}
        shell: sh
        run: |
          sudo apt-get update
          sudo apt-get install yasm
          cd /opt
          curl -LO https://github.com/godotengine/buildroot/releases/download/godot-2023.08.x-4/x86_64-godot-linux-gnu_sdk-buildroot.tar.bz2
          tar xf x86_64-godot-linux-gnu_sdk-buildroot.tar.bz2
          rm -f x86_64-godot-linux-gnu_sdk-buildroot.tar.bz2
          mv x86_64-godot-linux-gnu_sdk-buildroot buildroot
          cd buildroot
          ./relocate-sdk.sh

      - name: Set up Python
        uses: actions/setup-python@v5

      - name: Set up SCons
        shell: bash
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons==4.7.0
          scons --version

      - name: Load .scons_cache directory
        id: godot-extension-cache
        uses: actions/cache@v4
        with:
          path: ${{github.workspace}}/.scons_cache/
          key: ${{github.job}}-${{env.BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
          restore-keys: |
            ${{github.job}}-${{env.BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
            ${{github.job}}-${{env.BASE_BRANCH}}-${{github.ref}}
            ${{github.job}}-${{env.BASE_BRANCH}}-${{env.BASE_BRANCH}}

      - name: Compile extension
        shell: sh
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
          SCONS_CACHE_LIMIT: 7168
        run: |
          PATH=/opt/buildroot/bin:$PATH scons target='${{ matrix.opts.target }}' platform='${{ matrix.opts.platform }}' arch='${{ matrix.opts.arch }}' ${{ matrix.opts.args }} -j2
          ls -la bin/

      - name: Strip bins
        if: "!startsWith(matrix.opts.identifier, 'windows-') && startsWith(matrix.opts.arch, 'x86_')"
        shell: sh
        run: |
          strip bin/*

      - name: Prepare artifact
        shell: sh
        run: |
          mkdir -p project/addons/YAML/bin
          mkdir -p project/addons/YAML/icons
          mv bin/* project/addons/YAML/bin

          rm -rf *.exp *.lib

          cp -n 'YAML.gdextension' project/addons/YAML
          cp -n 'icons/YAML.svg' 'icons/YAML.svg.import' project/addons/YAML/icons

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: godot-yaml
          path: |
            project/
          retention-days: 14